sudo: required
language: rust
cache: cargo

os:
  - linux

services:
  - docker

jobs:
  include:
    - name: stable
      rust: stable
      before_script: cargo bootstrap
      script:
        cargo build --all --verbose &&
        cargo test --all --verbose &&
        cargo doc --all --verbose
    - name: style
      rust: 1.31.0 # Pinned warnings
      install:
      - rustup component add clippy
      - rustup component add rustfmt
      before_script: cargo bootstrap
      script:
      - cargo clippy --all -- -D warnings
      - cargo fmt --all -- --check
    - name: minimal versions
      rust: nightly-2018-12-08 # Arbitrary nightly for unstable cargo feature -- make this MSRV build later?
      before_script:
        - cargo -Z minimal-versions generate-lockfile
        - cargo bootstrap
      script: cargo test --all --verbose
    - name: coverage
      rust: nightly
      env: RUSTFLAGS="--cfg procmacro2_semver_exempt"
      install: cargo install cargo-tarpaulin --version 0.10.2
      before_script: cargo bootstrap
      script: cargo tarpaulin --verbose --out Xml --ciserver travis-ci
      after_success: bash <(curl -s https://codecov.io/bash)
    - stage: Fuzz regression
      if: branch = master AND type IN (push)
      rust: nightly
      dist: bionic
      script:
        - cargo install --list | grep cargo-fuzz || cargo install cargo-fuzz
        - cargo bootstrap
        - ./fuzzit.sh local-regression
    - stage: Fuzz
      if: branch = master AND type IN (push)
      rust: nightly
      dist: bionic
      script:
        - cargo install --list | grep cargo-fuzz || cargo install cargo-fuzz
        - cargo bootstrap
        - ./fuzzit.sh fuzzing
  allow_failures:
    - name: coverage # So builds don't have to wait on it
  fast_finish: true

addons:
  apt:
    packages:
      - libssl-dev
      - pkg-config
      - cmake
      - zlib1g-dev
git:
  depth: 1
branches:
  only:
    - staging
    - trying
    - master
notifications:
  email: false
